//this code belongs to Tridev Rapeti
//19MA20040

// results of below code (same as in q2 code), choosing to iterate for 20 times
// you can also choose to iterate gs algorithm until we get same x values before and after iterations
// choosing options for iterations can be done while giving input


/* answers of 3-a:
(x1,x2,x3,x4) =
(0,3.00055,-3.00122,2.00035)
(4.93747,0,4.06235,-0.999963)
(1.53122,0.664634,0,0.626682)
(96.2125,82.7109,-9.50157,0)
*/

/* answers of 3-b:
(x1,x2,x3) =
(4.54545e+018,3.63636e+019,-5.45455e+019)
*/

/* answers of 3-c:
(x1,x2,x3,x4) =
(0,-1.57286e+006,-3.14572e+006)
(inf,0,-inf)
(inf,inf,0)
(0,-1.57286e+006,-3.14572e+006)
(3,0,1)
(4.5,-0.5,0)
(0,inf,-inf)
(3,0,1)
(6,4,0)
(0,inf,inf)
(4.5,0,-0.5)
(6,4,0)
*/

/* answers of 3-d:
(x1,x2,x3) =
(0,-0.325,0.999999)
(3.41182e+007,0,-2.38828e+008)
(3.41182e+007,-1.19414e+008,0)
*/

/* answers of 3-e:
(x1,x2,x3) =
(0,6,12)
(36,0,5.99999)
(-1.25828e+007,6.29145e+006,0)
*/


#include <bits/stdc++.h>
using namespace std;

vector<float> gs(vector<vector<float> >a, vector<float>b, vector<float>x) {
    while(1) {
        vector<float>xprev=x;
        for(int j=0; j<b.size(); j++) {
            float c=b[j];
            for(int i=0; i<b.size(); i++) if(j!=i) c-=a[j][i]*x[i];
            x[j]=c/a[j][j];
        }
        if(xprev==x) break;
    }
    return x;
}

vector<float> gs1(vector<vector<float> >a, vector<float>b, vector<float>x) {
    for(int i=0; i<20; i++) {
        for(int j=0; j<b.size(); j++) {
            float c=b[j];
            for(int i=0; i<b.size(); i++) if(j!=i) c-=a[j][i]*x[i];
            x[j]=c/a[j][j];
        }
    }
    return x;
}

vector<vector<float> > recgs(vector<vector<float> >a, vector<float>b, vector<float>x, int n, int m, int q) {
    vector<vector<float> >xt;
    for(int i=0; i<n; i++) {
        vector<float>x1;
        for(int j=0; j<n; j++) {
            if(i!=j) x1.push_back(x[j]);
        }
        vector<vector<float> >anew;
        for(int j=0; j<m; j++) {
            vector<float>anew1;
            for(int k=0; k<n; k++) {
                if(i!=k) {
                    anew1.push_back(a[j][k]);
                }
            }
            anew.push_back(anew1);
        }
        if(x1.size()==m) {
            vector<float>x2;
            if(q) x2=gs(anew,b,x1);
            else x2=gs1(anew,b,x1);
            x2.insert(x2.begin()+i,0);
            xt.push_back(x2);
        }
        else {
            vector<vector<float> >xt1=recgs(anew,b,x1,n-1,m,q);
            xt.insert(xt.end(),xt1.begin(),xt1.end());
        }
    }
    return xt;
}

int main() {
    vector<vector<float> >a;
    vector<float>b;
    int m,n,q;
    float k;
    cout << "number of equations (value of m) : ";
    cin >> m;
    cout << "Number of variables to be found (value of n): ";
    cin >> n;
    for(int i=0; i<m; i++) {
        vector<float>a1;
        for(int j=0; j<n; j++) {
            cout << "Coeffecient of x" << j+1 << " of " << i+1 << "th equation : ";
            cin >> k;
            a1.push_back(k);
        }
        cout << "value of constant which makes the " << i+1 << "th equation non-homogenous : ";
        cin >> k;
        b.push_back(k);
        a.push_back(a1);
    }
    vector<float>x;
    for(int i=0; i<n; i++) {
        cout << "Enter initial value of x" << i+1 << " : ";
        cin >> k;
        x.push_back(k);
    }
    cout << "mode of iteration (enter 0 for 20 iterations, enter 1 for iterating until we get same values before and after iteration (upto 5 decimal places, this might take hell a lot of time in some cases) : ";
    cin >> q;
    vector<vector<float> >ans;
    if(m!=n) ans=recgs(a,b,x,n,m,q);
    else if(q) ans.push_back(gs(a,b,x));
    else ans.push_back(gs1(a,b,x));
    cout << endl << endl << "(x1";
    for(int i=1; i<n; i++) {
        cout << ",x" << i+1;
    }
    cout << ") = " << endl;
    for(int i=0; i<ans.size(); i++) {
        cout << "(" << ans[i][0];
        for(int j=1; j<ans[0].size(); j++) {
            cout << "," << ans[i][j];
        }
        cout << ")" << endl;
    }
    return 0;
}